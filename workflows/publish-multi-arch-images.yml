name: Publish Multi-Arch Images

on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      image_name:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      archs:
        required: false
        type: string
        default: linux/amd64
    secrets:
      QUAY_PUBLISH_ROBOT:
        required: true
      QUAY_PUBLISH_TOKEN:
        required: true
jobs:
  multiarch-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: add checkout action...
        uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Set container tags
        run: |
             if [ ${{ steps.extract_branch.outputs.branch }} == ${{ github.event.repository.default_branch }} ]; then
               echo "##[set-output name=tags;]$(echo ${{ inputs.registry }}/${{ inputs.image_name  }}:${{ steps.extract_branch.outputs.branch }},${{ inputs.registry }}/${{ inputs.image_name }}:latest)"
             else
               echo "##[set-output name=tags;]$(echo ${{ inputs.registry }}/${{ inputs.image_name }}:${{ steps.extract_branch.outputs.branch }})"
             fi 
        id: set_container_tags

      - name: configure QEMU action...
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: configure Docker Buildx...
        id: docker_buildx
        uses: docker/setup-buildx-action@master

      - name: login to Quay.io...
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.QUAY_PUBLISH_ROBOT }}
          password: ${{ secrets.QUAY_PUBLISH_TOKEN }}

      - name: build Multi-arch images...
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.docker_buildx.outputs.name }}
          context: .
          file: ./${{ inputs.dockerfile }}
          platforms: ${{ inputs.archs }}
          push: true
          tags: ${{ steps.set_container_tags.outputs.tags }}
